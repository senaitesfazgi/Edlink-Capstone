// <auto-generated />
using System;
using EdlinkCapstone.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EdlinkCapstone.Migrations.School
{
    [DbContext(typeof(SchoolContext))]
    partial class SchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EdlinkCapstone.Models.School", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SchoolAddress")
                        .HasColumnType("char(12)");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasColumnType("char(12)");

                    b.HasKey("ID");

                    b.ToTable("school");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            SchoolAddress = "11235 123st",
                            SchoolName = "Ivor Dent"
                        },
                        new
                        {
                            ID = -2,
                            SchoolAddress = "11326 143st",
                            SchoolName = "Belmont School"
                        },
                        new
                        {
                            ID = -3,
                            SchoolAddress = "112368 123st",
                            SchoolName = "Abbotsfield School "
                        },
                        new
                        {
                            ID = -4,
                            SchoolAddress = "16587 12st",
                            SchoolName = "George P. Nicholson School"
                        },
                        new
                        {
                            ID = -5,
                            SchoolAddress = "16587 12st",
                            SchoolName = "George P. Nicholson School"
                        });
                });

            modelBuilder.Entity("EdlinkCapstone.Models.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<int>("SchoolID")
                        .HasColumnName("SchoolID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SchoolID")
                        .HasName("FK_Student_School");

                    b.ToTable("student");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            Address = "11235 167st",
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1996),
                            Email = "student1@email.com",
                            FirstName = "Frank",
                            LastName = "Terry",
                            PhoneNumber = "+17804561232",
                            SchoolID = -1
                        },
                        new
                        {
                            ID = -2,
                            Address = "12236 165st",
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1997),
                            Email = "student2@email.com",
                            FirstName = "David",
                            LastName = "Lynn",
                            PhoneNumber = "+17805684139",
                            SchoolID = -2
                        },
                        new
                        {
                            ID = -3,
                            Address = "45768 321st",
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1995),
                            Email = "student3@email.com",
                            FirstName = "Tomas",
                            LastName = "Bunny",
                            PhoneNumber = "+17806547236",
                            SchoolID = -3
                        },
                        new
                        {
                            ID = -4,
                            Address = "11123 156st",
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1997),
                            Email = "student4@email.com",
                            FirstName = "Kale",
                            LastName = "Kate",
                            PhoneNumber = "+17808974562",
                            SchoolID = -4
                        },
                        new
                        {
                            ID = -5,
                            Address = "45678 326st",
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1997),
                            Email = "student5@email.com",
                            FirstName = "Belly",
                            LastName = "Kelly",
                            PhoneNumber = "+17801236544",
                            SchoolID = -5
                        });
                });

            modelBuilder.Entity("EdlinkCapstone.Models.Student", b =>
                {
                    b.HasOne("EdlinkCapstone.Models.School", "School")
                        .WithMany("Students")
                        .HasForeignKey("SchoolID")
                        .HasConstraintName("FK_Student_School")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
